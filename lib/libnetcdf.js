var FFI = require('ffi'),
    ArrayType = require('ref-array'),
    Struct = require('ref-struct'),
    ref = require('ref');

var voidPtr = ref.refType(ref.types.void);

exports.CONSTANTS = {
};

var size_t = exports.size_t = voidPtr;
var size_tPtr = exports.size_tPtr = ref.refType(size_t);
var nc_type = exports.nc_type = voidPtr;
var nc_typePtr = exports.nc_typePtr = ref.refType(nc_type);
var nc_vlen_t = exports.nc_vlen_t = Struct({
  len: ref.types.ulong,
  p: voidPtr,
});
var nc_vlen_tPtr = exports.nc_vlen_tPtr = ref.refType(nc_vlen_t);
var ptrdiff_t = exports.ptrdiff_t = voidPtr;
var ptrdiff_tPtr = exports.ptrdiff_tPtr = ref.refType(ptrdiff_t);

exports.netcdf = new FFI.Library('libnetcdf', {
  __error: [ref.refType(ref.types.int32), [
  ]],
  nc_inq_libvers: [ref.types.CString, [
  ]],
  nc_strerror: [ref.types.CString, [
    ref.types.int32,
  ]],
  nc__create: [ref.types.int32, [
    ref.types.CString,
    ref.types.int32,
    ref.types.ulong,
    size_t,
    ref.refType(ref.types.int32),
  ]],
  nc_create: [ref.types.int32, [
    ref.types.CString,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc__open: [ref.types.int32, [
    ref.types.CString,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.int32),
  ]],
  nc_open: [ref.types.int32, [
    ref.types.CString,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_path: [ref.types.int32, [
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.CString), //ref.types.CString,
  ]],
  nc_inq_ncid: [ref.types.int32, [
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_grps: [ref.types.int32, [
    ref.types.int32,
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
  ]],
  nc_inq_grpname: [ref.types.int32, [
    ref.types.int32,
    ref.types.CString,
  ]],
  nc_inq_grpname_full: [ref.types.int32, [
    ref.types.int32,
    size_tPtr,
    ref.types.CString,
  ]],
  nc_inq_grpname_len: [ref.types.int32, [
    ref.types.int32,
    size_tPtr,
  ]],
  nc_inq_grp_parent: [ref.types.int32, [
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_grp_ncid: [ref.types.int32, [
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_grp_full_ncid: [ref.types.int32, [
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_varids: [ref.types.int32, [
    ref.types.int32,
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
  ]],
  nc_inq_dimids: [ref.types.int32, [
    ref.types.int32,
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
    ref.types.int32,
  ]],
  nc_inq_typeids: [ref.types.int32, [
    ref.types.int32,
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
  ]],
  nc_inq_type_equal: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_def_grp: [ref.types.int32, [
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.int32),
  ]],
  nc_rename_grp: [ref.types.int32, [
    ref.types.int32,
    ref.types.CString,
  ]],
  nc_def_compound: [ref.types.int32, [
    ref.types.int32,
    ref.types.ulong,
    ref.types.CString,
    nc_type,
  ]],
  nc_insert_compound: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.ulong,
    ref.types.int32,
  ]],
  nc_insert_array_compound: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.ulong,
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_type: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.CString),
    size_tPtr,
  ]],
  nc_inq_typeid: [ref.types.int32, [
    ref.types.int32,
    ref.types.CString,
    nc_typePtr,
  ]],
  nc_inq_compound: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    size_tPtr,
    size_tPtr,
  ]],
  nc_inq_compound_name: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
  ]],
  nc_inq_compound_size: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
  ]],
  nc_inq_compound_nfields: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
  ]],
  nc_inq_compound_field: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    size_tPtr,
    nc_typePtr,
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
  ]],
  nc_inq_compound_fieldname: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
  ]],
  nc_inq_compound_fieldindex: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_compound_fieldoffset: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
  ]],
  nc_inq_compound_fieldtype: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    nc_typePtr,
  ]],
  nc_inq_compound_fieldndims: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_compound_fielddim_sizes: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_def_vlen: [ref.types.int32, [
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    nc_typePtr,
  ]],
  nc_inq_vlen: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    size_tPtr,
    nc_typePtr,
  ]],
  nc_free_vlen: [ref.types.int32, [
    nc_vlen_tPtr,
  ]],
  nc_put_vlen_element: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    voidPtr,
    ref.types.ulong,
    voidPtr,
  ]],
  nc_get_vlen_element: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    voidPtr,
    size_tPtr,
    voidPtr,
  ]],
  nc_free_string: [ref.types.int32, [
    ref.types.ulong,
    voidPtr,
  ]],
  nc_inq_user_type: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    size_tPtr,
    nc_typePtr,
    size_tPtr,
    ref.refType(ref.types.int32),
  ]],
  nc_put_att: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString, //ref.refType(ref.types.CString),
    ref.types.int32,
    ref.types.ulong,
    voidPtr,
  ]],
  nc_get_att: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    voidPtr,
  ]],
  nc_def_enum: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    nc_typePtr,
  ]],
  nc_insert_enum: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    voidPtr,
  ]],
  nc_inq_enum: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    nc_typePtr,
    size_tPtr,
    size_tPtr,
  ]],
  nc_inq_enum_member: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    voidPtr,
  ]],
  nc_inq_enum_ident: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.longlong,
    ref.types.CString,
  ]],
  nc_def_opaque: [ref.types.int32, [
    ref.types.int32,
    ref.types.ulong,
    ref.types.CString,
    nc_typePtr,
  ]],
  nc_inq_opaque: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    size_tPtr,
  ]],
  nc_put_var: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    voidPtr,
  ]],
  nc_get_var: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    voidPtr,
  ]],
  nc_put_var1: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    voidPtr,
  ]],
  nc_get_var1: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    voidPtr,
  ]],
  nc_put_vara: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    voidPtr,
  ]],
  nc_get_vara: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    voidPtr,
  ]],
  nc_put_vars: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_t,
    voidPtr,
  ]],
  nc_get_vars: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    voidPtr,
  ]],
  nc_put_varm: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    voidPtr,
  ]],
  nc_get_varm: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    voidPtr,
  ]],
  nc_def_var_deflate: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
  ]],
  nc_inq_var_deflate: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
  ]],
  nc_inq_var_szip: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
  ]],
  nc_def_var_fletcher32: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
  ]],
  nc_inq_var_fletcher32: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_def_var_chunking: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
  ]],
  nc_inq_var_chunking: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
    size_tPtr,
  ]],
  nc_def_var_fill: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    voidPtr,
  ]],
  nc_inq_var_fill: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
    voidPtr,
  ]],
  nc_def_var_endian: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
  ]],
  nc_inq_var_endian: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_set_fill: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_set_default_format: [ref.types.int32, [
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_set_chunk_cache: [ref.types.int32, [
    ref.types.ulong,
    ref.types.ulong,
    ref.types.float,
  ]],
  nc_get_chunk_cache: [ref.types.int32, [
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.float),
  ]],
  nc_set_var_chunk_cache: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.ulong,
    ref.types.ulong,
    ref.types.float,
  ]],
  nc_get_var_chunk_cache: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.float),
  ]],
  nc_redef: [ref.types.int32, [
    ref.types.int32,
  ]],
  nc__enddef: [ref.types.int32, [
    ref.types.int32,
    ref.types.ulong,
    ref.types.ulong,
    ref.types.ulong,
    ref.types.ulong,
  ]],
  nc_enddef: [ref.types.int32, [
    ref.types.int32,
  ]],
  nc_sync: [ref.types.int32, [
    ref.types.int32,
  ]],
  nc_abort: [ref.types.int32, [
    ref.types.int32,
  ]],
  nc_close: [ref.types.int32, [
    ref.types.int32,
  ]],
  nc_inq: [ref.types.int32, [
    ref.types.int32,
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
  ]],
  nc_inq_ndims: [ref.types.int32, [
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_nvars: [ref.types.int32, [
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_natts: [ref.types.int32, [
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_unlimdim: [ref.types.int32, [
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_unlimdims: [ref.types.int32, [
    ref.types.int32,
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
  ]],
  nc_inq_format: [ref.types.int32, [
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_format_extended: [ref.types.int32, [
    ref.types.int32,
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
  ]],
  nc_def_dim: [ref.types.int32, [
    ref.types.int32,
    ref.types.CString,
    ref.types.ulong,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_dimid: [ref.types.int32, [
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_dim: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.CString), //ref.types.CString,
    size_tPtr,
  ]],
  nc_inq_dimname: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.CString), //ref.types.CString,
  ]],
  nc_inq_dimlen: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
  ]],
  nc_rename_dim: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
  ]],
  nc_inq_att: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    nc_typePtr,
    size_tPtr,
  ]],
  nc_inq_attid: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_atttype: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    nc_typePtr,
  ]],
  nc_inq_attlen: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    size_tPtr,
  ]],
  nc_inq_attname: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.CString),
  ]],
  nc_copy_att: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.int32,
  ]],
  nc_rename_att: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.CString,
  ]],
  nc_del_att: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
  ]],
  nc_put_att_text: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.ulong,
    ref.types.CString,
  ]],
  nc_get_att_text: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.CString,
  ]],
  nc_put_att_uchar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.ulong,
    ref.refType(ref.types.uchar),
  ]],
  nc_get_att_uchar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.uchar),
  ]],
  nc_put_att_schar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.ulong,
    ref.refType(ref.types.char),
  ]],
  nc_get_att_schar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.char),
  ]],
  nc_put_att_short: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.ulong,
    ref.refType(ref.types.short),
  ]],
  nc_get_att_short: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.short),
  ]],
  nc_put_att_int: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.ulong,
    ref.refType(ref.types.int32),
  ]],
  nc_get_att_int: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.int32),
  ]],
  nc_put_att_long: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.ulong,
    ref.refType(ref.types.long),
  ]],
  nc_get_att_long: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.long),
  ]],
  nc_put_att_float: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.ulong,
    ref.types.float, //ref.refType(ref.types.float),
  ]],
  nc_get_att_float: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.float),
  ]],
  nc_put_att_double: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.ulong,
    ref.refType(ref.types.double),
  ]],
  nc_get_att_double: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.double),
  ]],
  nc_put_att_ushort: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.ulong,
    ref.refType(ref.types.ushort),
  ]],
  nc_get_att_ushort: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.ushort),
  ]],
  nc_put_att_uint: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.ulong,
    ref.refType(ref.types.uint32),
  ]],
  nc_get_att_uint: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.uint32),
  ]],
  nc_put_att_longlong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.ulong,
    ref.refType(ref.types.longlong),
  ]],
  nc_get_att_longlong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.longlong),
  ]],
  nc_put_att_ulonglong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.ulong,
    ref.refType(ref.types.ulonglong),
  ]],
  nc_get_att_ulonglong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.ulonglong),
  ]],
  nc_put_att_string: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.ulong,
    ref.refType( ref.types.CString ),//ref.types.CString, //voidPtr,
  ]],
  nc_get_att_string: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    voidPtr,
  ]],
  nc_def_var: [ref.types.int32, [
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
  ]],
  nc_inq_var: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.CString),
    //ref.types.CString,
    //'char *',
    nc_typePtr,
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
  ]],
  nc_inq_varid: [ref.types.int32, [
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_varname: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
  ]],
  nc_inq_vartype: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    nc_typePtr,
  ]],
  nc_inq_varndims: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_vardimid: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_inq_varnatts: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_rename_var: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
  ]],
  nc_copy_var: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
  ]],
  nc_put_var1_text: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.types.CString,
  ]],
  nc_get_var1_text: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.types.CString,
  ]],
  nc_put_var1_uchar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.uchar),
  ]],
  nc_get_var1_uchar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.uchar),
  ]],
  nc_put_var1_schar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.char),
  ]],
  nc_get_var1_schar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.char),
  ]],
  nc_put_var1_short: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.short),
  ]],
  nc_get_var1_short: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.short),
  ]],
  nc_put_var1_int: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.int32),
  ]],
  nc_get_var1_int: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.int32),
  ]],
  nc_put_var1_long: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.long),
  ]],
  nc_get_var1_long: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.long),
  ]],
  nc_put_var1_float: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.float),
  ]],
  nc_get_var1_float: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.float),
  ]],
  nc_put_var1_double: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.double),
  ]],
  nc_get_var1_double: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.double),
  ]],
  nc_put_var1_ushort: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.ushort),
  ]],
  nc_get_var1_ushort: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.ushort),
  ]],
  nc_put_var1_uint: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.uint32),
  ]],
  nc_get_var1_uint: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.uint32),
  ]],
  nc_put_var1_longlong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.longlong),
  ]],
  nc_get_var1_longlong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.longlong),
  ]],
  nc_put_var1_ulonglong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.ulonglong),
  ]],
  nc_get_var1_ulonglong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.ulonglong),
  ]],
  nc_put_var1_string: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    voidPtr,
  ]],
  nc_get_var1_string: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    voidPtr,
  ]],
  nc_put_vara_text: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.types.CString,
  ]],
  nc_get_vara_text: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.types.CString,
  ]],
  nc_put_vara_uchar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.uchar),
  ]],
  nc_get_vara_uchar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.uchar),
  ]],
  nc_put_vara_schar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.char),
  ]],
  nc_get_vara_schar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.char),
  ]],
  nc_put_vara_short: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.short),
  ]],
  nc_get_vara_short: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.short),
  ]],
  nc_put_vara_int: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.int32),
  ]],
  nc_get_vara_int: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.int32),
  ]],
  nc_put_vara_long: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.long),
  ]],
  nc_get_vara_long: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.long),
  ]],
  nc_put_vara_float: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.float),
  ]],
  nc_get_vara_float: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.float),
  ]],
  nc_put_vara_double: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.double),
  ]],
  nc_get_vara_double: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.double),
  ]],
  nc_put_vara_ushort: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.ushort),
  ]],
  nc_get_vara_ushort: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.ushort),
  ]],
  nc_put_vara_uint: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.uint32),
  ]],
  nc_get_vara_uint: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.uint32),
  ]],
  nc_put_vara_longlong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.longlong),
  ]],
  nc_get_vara_longlong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.longlong),
  ]],
  nc_put_vara_ulonglong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.ulonglong),
  ]],
  nc_get_vara_ulonglong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.ulonglong),
  ]],
  nc_put_vara_string: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    voidPtr,
  ]],
  nc_get_vara_string: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    voidPtr,
  ]],
  nc_put_vars_text: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.types.CString,
  ]],
  nc_get_vars_text: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.types.CString,
  ]],
  nc_put_vars_uchar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.uchar),
  ]],
  nc_get_vars_uchar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.uchar),
  ]],
  nc_put_vars_schar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.char),
  ]],
  nc_get_vars_schar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.char),
  ]],
  nc_put_vars_short: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.short),
  ]],
  nc_get_vars_short: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.short),
  ]],
  nc_put_vars_int: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.int32),
  ]],
  nc_get_vars_int: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.int32),
  ]],
  nc_put_vars_long: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.long),
  ]],
  nc_get_vars_long: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.long),
  ]],
  nc_put_vars_float: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.float),
  ]],
  nc_get_vars_float: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.float),
  ]],
  nc_put_vars_double: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.double),
  ]],
  nc_get_vars_double: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.double),
  ]],
  nc_put_vars_ushort: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.ushort),
  ]],
  nc_get_vars_ushort: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.ushort),
  ]],
  nc_put_vars_uint: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.uint32),
  ]],
  nc_get_vars_uint: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.uint32),
  ]],
  nc_put_vars_longlong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.longlong),
  ]],
  nc_get_vars_longlong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.longlong),
  ]],
  nc_put_vars_ulonglong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.ulonglong),
  ]],
  nc_get_vars_ulonglong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.ulonglong),
  ]],
  nc_put_vars_string: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    voidPtr,
  ]],
  nc_get_vars_string: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    voidPtr,
  ]],
  nc_put_varm_text: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.types.CString,
  ]],
  nc_get_varm_text: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.types.CString,
  ]],
  nc_put_varm_uchar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.uchar),
  ]],
  nc_get_varm_uchar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.uchar),
  ]],
  nc_put_varm_schar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.char),
  ]],
  nc_get_varm_schar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.char),
  ]],
  nc_put_varm_short: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.short),
  ]],
  nc_get_varm_short: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.short),
  ]],
  nc_put_varm_int: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.int32),
  ]],
  nc_get_varm_int: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.int32),
  ]],
  nc_put_varm_long: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.long),
  ]],
  nc_get_varm_long: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.long),
  ]],
  nc_put_varm_float: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.float),
  ]],
  nc_get_varm_float: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.float),
  ]],
  nc_put_varm_double: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.double),
  ]],
  nc_get_varm_double: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.double),
  ]],
  nc_put_varm_ushort: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.ushort),
  ]],
  nc_get_varm_ushort: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.ushort),
  ]],
  nc_put_varm_uint: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.uint32),
  ]],
  nc_get_varm_uint: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.uint32),
  ]],
  nc_put_varm_longlong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.longlong),
  ]],
  nc_get_varm_longlong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.longlong),
  ]],
  nc_put_varm_ulonglong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.ulonglong),
  ]],
  nc_get_varm_ulonglong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.ulonglong),
  ]],
  nc_put_varm_string: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    voidPtr,
  ]],
  nc_get_varm_string: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    voidPtr,
  ]],
  nc_put_var_text: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
  ]],
  nc_get_var_text: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
  ]],
  nc_put_var_uchar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.uchar),
  ]],
  nc_get_var_uchar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.uchar),
  ]],
  nc_put_var_schar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.char),
  ]],
  nc_get_var_schar: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.char),
  ]],
  nc_put_var_short: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.short),
  ]],
  nc_get_var_short: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.short),
  ]],
  nc_put_var_int: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_get_var_int: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nc_put_var_long: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.long),
  ]],
  nc_get_var_long: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.long),
  ]],
  nc_put_var_float: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.float),
  ]],
  nc_get_var_float: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.float),
  ]],
  nc_put_var_double: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.double),
  ]],
  nc_get_var_double: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.double),
  ]],
  nc_put_var_ushort: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.ushort),
  ]],
  nc_get_var_ushort: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.ushort),
  ]],
  nc_put_var_uint: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.uint32),
  ]],
  nc_get_var_uint: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.uint32),
  ]],
  nc_put_var_longlong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.longlong),
  ]],
  nc_get_var_longlong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.longlong),
  ]],
  nc_put_var_ulonglong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.ulonglong),
  ]],
  nc_get_var_ulonglong: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.ulonglong),
  ]],
  nc_put_var_string: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    voidPtr,
  ]],
  nc_get_var_string: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    voidPtr,
  ]],
  nc_put_att_ubyte: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.ulong,
    ref.refType(ref.types.uchar),
  ]],
  nc_get_att_ubyte: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.uchar),
  ]],
  nc_put_var1_ubyte: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.uchar),
  ]],
  nc_get_var1_ubyte: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.uchar),
  ]],
  nc_put_vara_ubyte: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.uchar),
  ]],
  nc_get_vara_ubyte: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ref.refType(ref.types.uchar),
  ]],
  nc_put_vars_ubyte: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.uchar),
  ]],
  nc_get_vars_ubyte: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.uchar),
  ]],
  nc_put_varm_ubyte: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.uchar),
  ]],
  nc_get_varm_ubyte: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    size_tPtr,
    ptrdiff_tPtr,
    ptrdiff_tPtr,
    ref.refType(ref.types.uchar),
  ]],
  nc_put_var_ubyte: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.uchar),
  ]],
  nc_get_var_ubyte: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.uchar),
  ]],
  nc_show_metadata: [ref.types.int32, [
    ref.types.int32,
  ]],
  nc__create_mp: [ref.types.int32, [
    ref.types.CString,
    ref.types.int32,
    ref.types.ulong,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.int32),
  ]],
  nc__open_mp: [ref.types.int32, [
    ref.types.CString,
    ref.types.int32,
    ref.types.int32,
    size_tPtr,
    ref.refType(ref.types.int32),
  ]],
  nc_delete: [ref.types.int32, [
    ref.types.CString,
  ]],
  nc_delete_mp: [ref.types.int32, [
    ref.types.CString,
    ref.types.int32,
  ]],
  nc_set_base_pe: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
  ]],
  nc_inq_base_pe: [ref.types.int32, [
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  nctypelen: [ref.types.int32, [
    ref.types.int32,
  ]],
  nc_advise: [ref.types.void, [
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  nccreate: [ref.types.int32, [
    ref.types.CString,
    ref.types.int32,
  ]],
  ncopen: [ref.types.int32, [
    ref.types.CString,
    ref.types.int32,
  ]],
  ncsetfill: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
  ]],
  ncredef: [ref.types.int32, [
    ref.types.int32,
  ]],
  ncendef: [ref.types.int32, [
    ref.types.int32,
  ]],
  ncsync: [ref.types.int32, [
    ref.types.int32,
  ]],
  ncabort: [ref.types.int32, [
    ref.types.int32,
  ]],
  ncclose: [ref.types.int32, [
    ref.types.int32,
  ]],
  ncinquire: [ref.types.int32, [
    ref.types.int32,
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
  ]],
  ncdimdef: [ref.types.int32, [
    ref.types.int32,
    ref.types.CString,
    ref.types.long,
  ]],
  ncdimid: [ref.types.int32, [
    ref.types.int32,
    ref.types.CString,
  ]],
  ncdiminq: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.long),
  ]],
  ncdimrename: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
  ]],
  ncattput: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.int32,
    voidPtr,
  ]],
  ncattinq: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    nc_typePtr,
    ref.refType(ref.types.int32),
  ]],
  ncattget: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    voidPtr,
  ]],
  ncattcopy: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.int32,
  ]],
  ncattname: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
  ]],
  ncattrename: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.CString,
  ]],
  ncattdel: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
  ]],
  ncvardef: [ref.types.int32, [
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  ncvarid: [ref.types.int32, [
    ref.types.int32,
    ref.types.CString,
  ]],
  ncvarinq: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    nc_typePtr,
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
  ]],
  ncvarput1: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.long),
    voidPtr,
  ]],
  ncvarget1: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.long),
    voidPtr,
  ]],
  ncvarput: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.long),
    ref.refType(ref.types.long),
    voidPtr,
  ]],
  ncvarget: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.long),
    ref.refType(ref.types.long),
    voidPtr,
  ]],
  ncvarputs: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.long),
    ref.refType(ref.types.long),
    ref.refType(ref.types.long),
    voidPtr,
  ]],
  ncvargets: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.long),
    ref.refType(ref.types.long),
    ref.refType(ref.types.long),
    voidPtr,
  ]],
  ncvarputg: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.long),
    ref.refType(ref.types.long),
    ref.refType(ref.types.long),
    ref.refType(ref.types.long),
    voidPtr,
  ]],
  ncvargetg: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.long),
    ref.refType(ref.types.long),
    ref.refType(ref.types.long),
    ref.refType(ref.types.long),
    voidPtr,
  ]],
  ncvarrename: [ref.types.int32, [
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
  ]],
  ncrecinq: [ref.types.int32, [
    ref.types.int32,
    ref.refType(ref.types.int32),
    ref.refType(ref.types.int32),
    ref.refType(ref.types.long),
  ]],
  ncrecget: [ref.types.int32, [
    ref.types.int32,
    ref.types.long,
    voidPtr,
  ]],
  ncrecput: [ref.types.int32, [
    ref.types.int32,
    ref.types.long,
    voidPtr,
  ]],
});

